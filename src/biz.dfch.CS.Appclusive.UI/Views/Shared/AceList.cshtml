@model IEnumerable<biz.dfch.CS.Appclusive.UI.Models.Core.Ace>
@using biz.dfch.CS.Appclusive.UI.Helpers
@using biz.dfch.CS.Appclusive.UI.App_LocalResources

@if (ViewData["Readonly"] == null || !(bool)ViewData["Readonly"])
{
    <div class="row" style="margin-bottom:5px">
        <div class="col-md-2">
            @Html.SecuredButton("Create", Url.Action("Create", "Aces", new { AclId = ViewBag.AclId }))
        </div>
    </div>
}
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Permission)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TrusteeType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Trustee)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        if (ViewData["Readonly"] == null || !(bool)ViewData["Readonly"])
        {
            <tr>
                <td class="ap-hand">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="ap-hand">
                    @Html.DisplayFor(modelItem => item.TypeStr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Permission)
                </td>
                <td class="ap-hand">
                    @Html.DisplayFor(modelItem => item.TrusteeTypeStr)
                </td>
                <td class="ap-hand">
                    @Html.DisplayFor(modelItem => item.Trustee)
                </td>
                <td class="ap-btn text-nowrap"></td>
            </tr>
        }
        else
        {
            string detailLink = Url.Action("Details", "Aces", new { id = item.Id, rId = item.AclId, rAction = "Details", rController = "Acls" });
            <tr>
                <td onclick="window.location = '@detailLink'" class="ap-hand">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td onclick="window.location = '@detailLink'" class="ap-hand">
                    @Html.DisplayFor(modelItem => item.TypeStr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Permission)
                </td>
                <td onclick="window.location = '@detailLink'" class="ap-hand">
                    @Html.DisplayFor(modelItem => item.TrusteeTypeStr)
                </td>
                <td class="ap-hand">
                    @Html.DisplayFor(modelItem => item.Trustee)
                </td>
                <td class="ap-btn text-nowrap">
                    @if (ViewData["Readonly"] == null || !(bool)ViewData["Readonly"])
                    {
                        <a class="btn btn-primary btn-sm" href="@detailLink"><i class="fa fa-cog"></i> @GeneralResources.DetailsLink</a>
                        @Html.SecuredButton("Update", Url.Action("Edit", "Aces", new { id = item.Id }))
                        @Html.SecuredButton("Delete", Url.Action("Delete", "Aces", new { id = item.Id }))
                    }
                </td>
            </tr>
        }
    }

</table>
