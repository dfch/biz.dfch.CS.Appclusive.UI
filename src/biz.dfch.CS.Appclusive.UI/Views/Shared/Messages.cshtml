@using biz.dfch.CS.Appclusive.UI.Helpers
@if (!string.IsNullOrEmpty(ViewBag.ErrorText))
{
    <div class="text-danger ap-errortext">
        @ViewBag.ErrorText
    </div>
}
@if (!string.IsNullOrEmpty(ViewBag.InfoText))
{
    <div class="text-info ap-infotext">
        @ViewBag.InfoText
    </div>
}

@if (null != ViewBag.Notifications && ViewBag.Notifications.Count > 0)
{
    foreach (biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel note in (IEnumerable<biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel>)ViewBag.Notifications)
    {
        switch (note.Level)
        {
            case biz.dfch.CS.Appclusive.UI.Models.ENotifyStyle.error:
                <div class="text-danger ap-errortext">
                    @note.Message
                </div>
                break;
            case biz.dfch.CS.Appclusive.UI.Models.ENotifyStyle.warn:
            <div class="text-warn ap-errortext">
                @note.Message
            </div>
                break;
            case biz.dfch.CS.Appclusive.UI.Models.ENotifyStyle.success:
            <div class="text-success ap-errortext">
                @note.Message
            </div>
                break;
            default:
            <div class="text-info ap-infotext">
                @note.Message
            </div>
                break;
        }
    }

    using (Html.Delayed())
    {
        foreach (biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel note in (IEnumerable<biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel>)ViewBag.Notifications)
        {
            if (string.IsNullOrEmpty(note.ElementId))
            {
                <script type="text/javascript">
                    $.notify("@note.Message.Replace("\r\n", " ")", "@note.Level");
                </script>
            }
            else
            {
                <script type="text/javascript">
                    $("#@note.ElementId").notify("@note.Message.Replace("\r\n", " ")", "@note.Level");
                </script>
            }
        }
    }
}
