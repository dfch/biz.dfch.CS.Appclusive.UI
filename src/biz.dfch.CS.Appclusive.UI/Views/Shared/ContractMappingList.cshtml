@model IEnumerable<biz.dfch.CS.Appclusive.UI.Models.Core.ContractMapping>
@using biz.dfch.CS.Appclusive.UI.Helpers
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Customer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExternalId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExternalType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsPrimary)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValidFrom)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValidUntil)
        </th>
        <th></th>
    </tr>

    @foreach (var contract in Model)
    {
        <tr>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.Name)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.Customer)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.ExternalId)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.ExternalType)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.IsPrimary)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.ValidFrom)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ContractMappings", new { id = contract.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => contract.ValidUntil)
            </td>
            <td class="ap-btn text-nowrap">
                @Html.SecuredButton("Details", Url.Action("Details", "ContractMappings", new { id = contract.Id }))
                @if (ViewBag.ShowEditLinks != null && ViewBag.ShowEditLinks)
                {
                    @Html.SecuredButton("Edit", Url.Action("Edit", "ContractMappings", new { id = contract.Id }))
                }
            </td>
        </tr>
    }

</table>
