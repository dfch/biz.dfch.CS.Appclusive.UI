@model biz.dfch.CS.Appclusive.UI.Models.SpecialOperations.CheckPermission
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
@using biz.dfch.CS.Appclusive.UI.Helpers
@{
    AjaxOptions ajaxOptions = new AjaxOptions() { UpdateTargetId = "permChecker", InsertionMode = InsertionMode.Replace, HttpMethod = "Post", OnBegin = "showPermissionBusy", OnComplete = "hidePermissionBusy" };
    System.Collections.Generic.Dictionary<string, Object> htmlAttributes = new System.Collections.Generic.Dictionary<string, Object>();
    htmlAttributes.Add("id", "permForm");
    htmlAttributes.Add("class", "form-inline");
    // htmlAttributes.Add("style","margin-bottom: 5px; padding-left: 0px;");
}
@if ("CheckPermission" == (string)ViewContext.Controller.ControllerContext.RouteData.Values["action"])
{
    @Html.Partial("AjaxNotification", (IEnumerable<biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel>)ViewBag.Notifications)
}
<div class="ap-busyParent">
    <div id="permissionListLoading"></div>
    <div id="permChecker" style="margin-bottom:15px">
        @using (Ajax.BeginForm("CheckPermission", "Nodes", (RouteValueDictionary)ViewBag.AjaxSearchRouteValueDictionary, ajaxOptions, htmlAttributes))
        {
            @Html.HiddenFor(model => model.NodeId)
            <div class="form-group">
                @*@Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label" })*@
                @Html.EditorFor(model => model.PermissionId, "Autocomplete", new { Value = Model.Permission == null ? "" : Model.Permission.Name, SelectUrl = @Url.Action("Select", "Permissions"), PlaceHolder = Html.DisplayNameFor(model => model.Permission) })
                @Html.ValidationMessageFor(model => model.PermissionId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.TrusteeType, htmlAttributes: new { @class = "control-label" })*@
                @Html.DropDownListFor(model => model.TrusteeType, typeof(biz.dfch.CS.Appclusive.UI.Models.Core.TrusteeTypeEnum), new { @class = "form-control", @onchange = "InitTrusteeAuto(this.value);" }, true)
                @Html.ValidationMessageFor(model => model.TrusteeType, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.Trustee, htmlAttributes: new { @class = "control-label" })*@
                @Html.EditorFor(model => model.TrusteeId, "Autocomplete", new { Value = Model.Trustee == null ? "" : Model.Trustee.Name, SearchTermId = "TrusteeIdSearch", SelectUrl = @Url.Action("Select", Model.TrusteeTypeStr + "s"), PlaceHolder = Html.DisplayNameFor(model => model.Trustee) })
                @Html.ValidationMessageFor(model => model.TrusteeId, "", new { @class = "text-danger" })
            </div>

            <input type="submit" value="@GeneralResources.CheckPermission" class="btn btn-primary" />

            <div class="form-group ap-message @(Model.Granted.HasValue ? (Model.Granted.Value ? "alert-success" : "alert-danger") : "") ">
                @Html.DisplayFor(model => model.GrantedMessage)
            </div>
        }
    </div>
</div>

@{
    biz.dfch.CS.Appclusive.UI.Controllers.IExtendedController extController = ViewContext.Controller as biz.dfch.CS.Appclusive.UI.Controllers.IExtendedController;
}
@if (null == extController || !extController.IsAjaxRequest)
{
    using (Html.Delayed())
    {
        // needs search Action on controller: public ActionResult Search(string term)
        <script type="text/javascript">

            function InitTrusteeAuto(trusteeTypeId) {
                $("#TrusteeId").val("");
                $("#TrusteeIdSearch").val("");
                if (trusteeTypeId == 0) {
                    InitAutocomplete('#TrusteeIdSearch', '#TrusteeId', '@Url.Action("Select", "Roles")')
                } else {
                    InitAutocomplete('#TrusteeIdSearch', '#TrusteeId', '@Url.Action("Select", "Users")')
                }
            }

        </script>
    }

    using (Html.Delayed(null, "permissionListLoading"))
    {
        <script type="text/javascript">

            function showPermissionBusy() {
                $("#permissionListLoading").show();
            }
            function hidePermissionBusy() {
                $("#permissionListLoading").hide();
            }

        </script>
    }
}
