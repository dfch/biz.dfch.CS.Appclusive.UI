@model IEnumerable<biz.dfch.CS.Appclusive.UI.Models.Core.ManagementUri>
@using biz.dfch.CS.Appclusive.UI.Helpers
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameForSort(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameForSort(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameForSort(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameForSort(model => model.Value)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        string id = (string)ViewContext.Controller.ControllerContext.RouteData.Values["id"];
        string action = (string)ViewContext.Controller.ControllerContext.RouteData.Values["action"];
        string controller = (string)ViewContext.Controller.ControllerContext.RouteData.Values["controller"];
        
        <tr>
            <td onclick="window.location = '@Url.Action("Details", "ManagementUris", new { id = item.Id, rId = id, rAction = action, rController = controller })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ManagementUris", new { id = item.Id, rId = id, rAction = action, rController = controller })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ManagementUris", new { id = item.Id, rId = id, rAction = action, rController = controller })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td onclick="window.location = '@Url.Action("Details", "ManagementUris", new { id = item.Id, rId = id, rAction = action, rController = controller })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td class="ap-btn text-nowrap">
                @Html.SecuredButton("Read", Url.Action("Details", "ManagementUris", new { id = item.Id, rId = id, rAction = action, rController = controller }))
                @if (ViewBag.ShowEditLinks != null && ViewBag.ShowEditLinks)
                {
                    @Html.SecuredButton("Update", Url.Action("Edit", "ManagementUris", new { id = item.Id }))
                    @Html.SecuredButton("Delete", Url.Action("Delete", "ManagementUris", new { id = item.Id }))
                }
            </td>
        </tr>
    }

</table>
