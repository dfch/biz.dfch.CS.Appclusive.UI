@using biz.dfch.CS.Appclusive.UI.Helpers
@using biz.dfch.CS.Appclusive.UI.Models.Core
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
@model IEnumerable<Approval>

@{
    ViewBag.Title = "Approval" + " List";

    switch ((string)ViewBag.SearchTerm)
    {
        case "Created": ViewBag.CreatedLinkClass = "active"; break;
        case "Approved": ViewBag.ApprovedLinkClass = "active"; break;
        case "Declined": ViewBag.DeclinedLinkClass = "active"; break;
        default: ViewBag.AllLinkClass = "active"; break;
    }
}
@section Title{
    <h2>@GeneralResources.ResourceManager.GetString("Approval")@GeneralResources.List</h2>
}

@*<nav class="navbar navbar-default">
        <ul class="nav navbar-nav">
            <li class="@ViewBag.AllLinkClass"><a href="?">all</a></li>
            <li class="@ViewBag.CreatedLinkClass"><a href="?searchTerm=@Approval.CREATED_STATUS">Created</a></li>
            <li class="@ViewBag.ApprovedLinkClass"><a href="?searchTerm=Approved">Approved</a></li>
            <li class="@ViewBag.DeclinedLinkClass"><a href="?searchTerm=Declined">Declined</a></li>
        </ul>
    </nav>*@
<div class="row">
    @Html.Partial("SearchForm")
</div>
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameForSort(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Job)
        </th>
        <th>
            @Html.DisplayNameForSort(model => model.NotBefore)
        </th>
        <th>
            @Html.DisplayNameForSort(model => model.ExpiresAt)
        </th>
        <th>
            @Html.DisplayNameForSort(model => model.Created)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td onclick="window.location = '@Url.Action("Details", new { id = item.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td onclick="window.location = '@Url.Action("Details", new { id = item.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Job)
            </td>
            <td onclick="window.location = '@Url.Action("Details", new { id = item.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.NotBefore)
            </td>
            <td onclick="window.location = '@Url.Action("Details", new { id = item.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.ExpiresAt)
            </td>
            <td onclick="window.location = '@Url.Action("Details", new { id = item.Id })'" class="ap-hand">
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td class="ap-btn text-nowrap">
                @Html.SecuredButton("Read", Url.Action("Details", new { id = item.Id }))
                @if (item.Job != null && item.Job.Status == Approval.CREATED_STATUS)
                {
                    @Html.SecuredButton("Update", Url.Action("Approve", new { id = item.Id }), "btn-success btn-sm", GeneralResources.Approve)
                    @Html.SecuredButton("Update", Url.Action("Decline", new { id = item.Id }), "btn-warning btn-sm", GeneralResources.Decline)
                }
            </td>
        </tr>
    }

</table>
