@model biz.dfch.CS.Appclusive.UI.Models.Core.Acl
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
@{
    bool isCreate = (string)ViewContext.Controller.ControllerContext.RouteData.Values["action"] == "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NoInheritanceFromParent, htmlAttributes: new { @class = "control-label" })
        <div>
            @if (isCreate)
            {
                @Html.EditorFor(model => model.NoInheritanceFromParent, null)
                @Html.ValidationMessageFor(model => model.NoInheritanceFromParent, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.DisplayFor(model => model.NoInheritanceFromParent)
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "4" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EntityKind, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.DisplayFor(model => model.EntityKind)
            @Html.HiddenFor(model => model.EntityKindId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EntityId, htmlAttributes: new { @class = "control-label" })
        <div>
            @if (isCreate)
            {
                @Html.EditorFor(model => model.EntityId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EntityId, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.DisplayFor(model => model, "EntityReference")
            }
        </div>
    </div>


    <div class="form-group">
        <input type="submit" value="@GeneralResources.Save" class="btn btn-primary" />
    </div>
}