@model biz.dfch.CS.Appclusive.UI.Models.Core.Node
@using biz.dfch.CS.Appclusive.UI.Helpers
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
@{
    ViewDataDictionary aceListViewData = new ViewDataDictionary();
    aceListViewData.Add("ParentId", Model.Acl != null ? Model.Acl.Id : 0);
    aceListViewData.Add("AjaxPaging", ViewBag.ExplicitAcePaging);
    aceListViewData.Add("Notifications", new List<biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel>());
    aceListViewData.Add("Readonly", true);

    ViewDataDictionary effectiveAceListViewData = new ViewDataDictionary();
    effectiveAceListViewData.Add("ParentId", Model.Id); // Node-ID
    effectiveAceListViewData.Add("AjaxPaging", ViewBag.EffectiveAcePaging);
    effectiveAceListViewData.Add("AjaxPagingTargetId", "effAceListAjax");
    effectiveAceListViewData.Add("AjaxPagingAction", "AceList");
    effectiveAceListViewData.Add("AjaxPagingController", "Nodes");
    effectiveAceListViewData.Add("Notifications", new List<biz.dfch.CS.Appclusive.UI.Models.AjaxNotificationViewModel>());
    effectiveAceListViewData.Add("Readonly", true);
}
@Html.Partial("CheckPermission", (biz.dfch.CS.Appclusive.UI.Models.SpecialOperations.CheckPermission)ViewBag.CheckNodePermission)

<div>
    <h4>@Html.DisplayNameFor(model => model.Acl)</h4>
    @if (Model.Acl == null)
    {
        <div class="row" style="margin-bottom:20px">
            <div class="col-md-4 media-middle">
                @*<span>@GeneralResources.None   </span>*@
                @Html.SecuredButton("Create", Url.Action("Create", "Acls", new { nodeId = Model.Id }), "btn-primary")
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-3">
                @GeneralResources.Acl
            </div>
            <div>
                @if (Model.Acl.NoInheritanceFromParent)
                {
                    @GeneralResources.HasNoInheritanceFromParent
                }
                else
                {
                    @GeneralResources.HasInheritanceFromParent
                }
            </div>
        </div>
        <!-- Acelist -->
        <div class="ap-busyParent">
            <div id="aceListLoading"></div>
            @Html.Partial("AceList", Model.Acl.Aces, aceListViewData)
        </div>
        <!-- Acelist end -->
        <div style="margin-bottom:20px">
            @Html.SecuredButton("Update", Url.Action("Edit", "Acls", new { id = Model.Acl.Id }), "btn-default")
            @Html.SecuredButton("Read", Url.Action("Details", "Acls", new { id = Model.Acl.Id }), "btn-primary")
            @if (Model.Acl.NoInheritanceFromParent)
            {
                @Html.SecuredButton("Create", Url.Action("Inheritance", "Acls", new { id = Model.Acl.Id, enable = Model.Acl.NoInheritanceFromParent }), "btn-danger", GeneralResources.InheritanceEnable, "fa-ellipsis-v", null, GeneralResources.InheritanceEnableConfirm)
            }
            else
            {
                @Html.SecuredButton("Create", Url.Action("Inheritance", "Acls", new { id = Model.Acl.Id, enable = Model.Acl.NoInheritanceFromParent }), "btn-danger", GeneralResources.InheritanceDisable, "fa-ellipsis-h", null, GeneralResources.InheritanceDisableConfirm)
            }
        </div>
    }
</div>
<hr />
<div>
    <h4>@Html.DisplayNameFor(model => model.EffectivAces)</h4>
    @if (Model.EffectivAces == null)
    {
        @GeneralResources.NotAvailable
    }
    else
    {
        @Html.Partial("AceList", Model.EffectivAces, effectiveAceListViewData)
    }
</div>

@using (Html.Delayed(null, "aceListLoading"))
{
    <script type="text/javascript">

        function showBusy() {
            $("#aceListLoading").show();
        }
        function hideBusy() {
            $("#aceListLoading").hide();
        }

    </script>
}
