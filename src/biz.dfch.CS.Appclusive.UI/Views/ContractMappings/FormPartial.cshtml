@model biz.dfch.CS.Appclusive.UI.Models.Core.ContractMapping
@using biz.dfch.CS.Appclusive.UI.App_LocalResources
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.DropDownListFor(model => model.CustomerId, (IEnumerable<SelectListItem>)ViewBag.CustomerSelection, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "4" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValidFromDateTime, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ValidFromDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ValidFromDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValidUntil, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ValidUntil, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.ValidUntil, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsPrimary, htmlAttributes: new { @class = "control-label" })
        <div class="left">
            @Html.EditorFor(model => model.IsPrimary, null)
            @Html.ValidationMessageFor(model => model.IsPrimary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExternalId, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ExternalId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExternalId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExternalType, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ExternalType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExternalType, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Parameters, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.TextAreaFor(model => model.Parameters, new { @class = "form-control", @rows = "4" })
            @Html.ValidationMessageFor(model => model.Parameters, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="@GeneralResources.Save" class="btn btn-primary" />
    </div>
}